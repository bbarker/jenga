JENGA="$(pwd)/${1:-./dist/build/jenga/jenga}"

DIFF=${USE_DIFF:-diff -u}

# Failure is the default!
RESULT="FAILED"

type "$JENGA" > /dev/null 2>&1 || {
    echo "No jenga executable specified on command line or on path."
    exit 1
}

ROOT=$(dirname "$0")/../../..
ROOT=$(cd "$ROOT" > /dev/null 2>&1 && pwd)
TMP=${ROOT}/tmp
TEST=${TMP}/test/$$
mkdir -p ${TEST}

cleanup () {
    echo "Cleaning up (${TEST})"
    rm -rf "${TEST}"
    echo ${RESULT}
    echo
}

trap cleanup EXIT

banner () {
    echo
    echo == "$*" ==
    echo == "Running in ${TEST}" ==
}

assert_file_exists () {
    if test ! -f "$1" ; then
        echo "Output file '$1' is missing."
        error=1
    fi
}

assert_file_absent () {
    if test -f "$1" ; then
        echo "File '$1' is present but should not be."
        error=1
    fi
}

pass_test () {
    RESULT="PASSED [ ${testname} ]"
    exit 0
}


fail_test () {
    RESULT="FAILED [ ${testname} ]"
    exit 1
}

sort_diff () {
    EXP="$1"
    ACTUAL="$2"
    EXPECTED_SORTED=${OUTPUT_DIR}/sort_diff.expected.$(basename $EXP)
    ACTUAL_SORTED=${OUTPUT_DIR}/sort_diff.actual.$(basename $ACTUAL)
    sort ${EXP} > ${EXPECTED_SORTED}
    sort ${ACTUAL} > ${ACTUAL_SORTED}
    diff ${EXPECTED_SORTED} ${ACTUAL_SORTED}
}

compare_files () {
    actual="$1"
    expect="$2"

    test -f ${expect} || echo "New file" > ${expect}

	local rc=0
    cmp ${actual} ${expect} > /dev/null || rc=1
    if test ${rc} -ne 0  ; then
        ${DIFF} ${actual} ${expect} || error=1
    fi
}
